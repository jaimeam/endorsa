{
	"info": {
		"_postman_id": "53379c13-b047-4a5f-8c6c-9fbac592e682",
		"name": "endorsa_api_testing",
		"description": "Testing of Endorsa APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "admin rights",
			"item": [
				{
					"name": "/users",
					"item": [
						{
							"name": "/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f942b2a1-8908-4625-ab0b-5dc686aa8f74",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users - ERROR 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users/1 - ERROR 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct first name\", function () {",
											"    pm.expect(jsonData.user.first_name).to.eql('Vincent')",
											"});",
											"postman.setEnvironmentVariable(\"new_user_id\", jsonData.user.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Vincent\",\n    \"last_name\": \"Vega\",\n    \"location\": \"California\",\n    \"description\": \"Freelance Gangster | MBA\",\n    \"contact\": \"123456789\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users - ERROR 422",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Vincent\",\n    \"location\": \"California\",\n    \"description\": \"Freelance Gangster | MBA\",\n    \"contact\": \"123456789\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8711c76d-ebfb-49be-978f-be6d9fb76be3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users/{{new_user_id}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f32782e-ff7c-4f0b-b70e-a6bc6786384c",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct first name\", function () {",
											"    pm.expect(jsonData.user.first_name).to.eql('Vincent')",
											"});",
											"pm.test(\"Returns endorsement\", function () {",
											"    pm.expect(jsonData.endorsements_given).to.be.a('Array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users/{{new_user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"{{new_user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users/{{new_user_id}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e085646-f17d-4ff7-a0a9-5c21e0608ea8",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct first name\", function () {",
											"    pm.expect(jsonData.user.location).to.eql('New York')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": \"New York\",\n    \"description\": \"Senior Gangster | MBA\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users/{{new_user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"{{new_user_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "/skills",
					"item": [
						{
							"name": "/skills",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f942b2a1-8908-4625-ab0b-5dc686aa8f74",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/skills",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills - ERROR 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/skills",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills/1 - ERROR 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/skills/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct name\", function () {",
											"    pm.expect(jsonData.skill.name).to.eql('Problem solving')",
											"});",
											"postman.setEnvironmentVariable(\"new_skill_id\", jsonData.skill.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Problem solving\",\n    \"description\": \"Ability to deal with complex situations and come up with a solution\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/skills",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills - ERROR 422",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Solve ANY kind of gangster issues\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/skills",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8711c76d-ebfb-49be-978f-be6d9fb76be3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/skills",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills/{{new_skill_id}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cf65d4b-2bfc-4066-b055-6d74755b3330",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct name\", function () {",
											"    pm.expect(jsonData.skill.name).to.eql('Problem solving')",
											"});",
											"pm.test(\"Returns endorsement\", function () {",
											"    pm.expect(jsonData.endorsements).to.be.a('Array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/skills/{{new_skill_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills",
										"{{new_skill_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/skills/{{new_skill_id}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e085646-f17d-4ff7-a0a9-5c21e0608ea8",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct name\", function () {",
											"    pm.expect(jsonData.skill.name).to.eql('Resourcefulness')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Resourcefulness\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/skills/{{new_skill_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"skills",
										"{{new_skill_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "/endorsements",
					"item": [
						{
							"name": "/endorsements",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f942b2a1-8908-4625-ab0b-5dc686aa8f74",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/endorsements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements"
									]
								}
							},
							"response": []
						},
						{
							"name": "/endorsements - ERROR 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/endorsements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements"
									]
								}
							},
							"response": []
						},
						{
							"name": "/endorsements/1 - ERROR 405",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f231b3a1-9b7b-4555-905e-aaf87cb160c8",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/endorsements/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/endorsements",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns correct giver ID\", function () {",
											"    var new_user_id = pm.environment.get(\"new_user_id\");",
											"    pm.expect(jsonData.endorsement.giver_id).to.eql(parseInt(new_user_id))",
											"});",
											"postman.setEnvironmentVariable(\"new_endorsement_id\", jsonData.endorsement.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"giver_id\": \"{{new_user_id}}\",\n    \"receiver_id\": \"{{new_user_id}}\",\n    \"skill_id\": \"{{new_skill_id}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/endorsements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements"
									]
								}
							},
							"response": []
						},
						{
							"name": "/endorsements - ERROR 422",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "852629f2-db70-4176-a29b-4705173f97cb",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"giver_id\": \"{{new_user_id}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/endorsements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements"
									]
								}
							},
							"response": []
						},
						{
							"name": "/endorsements",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8711c76d-ebfb-49be-978f-be6d9fb76be3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/endorsements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"endorsements"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "96bae230-f296-48a0-8e5e-b1cd5452b83a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1e73634c-c4af-4683-bd93-c4b5c30ac8da",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4a4e79cf-9ab2-4040-8825-31abe926efa7",
			"key": "base_url",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}